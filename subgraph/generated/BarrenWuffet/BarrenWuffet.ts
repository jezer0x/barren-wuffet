// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Created extends ethereum.Event {
  get params(): Created__Params {
    return new Created__Params(this);
  }
}

export class Created__Params {
  _event: Created;

  constructor(event: Created) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fundAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fundName(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ManagerMetadata extends ethereum.Event {
  get params(): ManagerMetadata__Params {
    return new ManagerMetadata__Params(this);
  }
}

export class ManagerMetadata__Params {
  _event: ManagerMetadata;

  constructor(event: ManagerMetadata) {
    this._event = event;
  }

  get walletAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get socialHandle(): string {
    return this._event.parameters[1].value.toString();
  }

  get chatroomInvite(): string {
    return this._event.parameters[2].value.toString();
  }

  get customLink(): string {
    return this._event.parameters[3].value.toString();
  }

  get aboutText(): string {
    return this._event.parameters[4].value.toString();
  }

  get strategyText(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BarrenWuffet__createFundInputConstraintsStruct extends ethereum.Tuple {
  get minCollateralPerSub(): BigInt {
    return this[0].toBigInt();
  }

  get maxCollateralPerSub(): BigInt {
    return this[1].toBigInt();
  }

  get minCollateralTotal(): BigInt {
    return this[2].toBigInt();
  }

  get maxCollateralTotal(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }

  get lockin(): BigInt {
    return this[5].toBigInt();
  }

  get allowedDepositToken(): BarrenWuffet__createFundInputConstraintsAllowedDepositTokenStruct {
    return changetype<
      BarrenWuffet__createFundInputConstraintsAllowedDepositTokenStruct
    >(this[6].toTuple());
  }

  get onlyWhitelistedInvestors(): boolean {
    return this[7].toBoolean();
  }
}

export class BarrenWuffet__createFundInputConstraintsAllowedDepositTokenStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class BarrenWuffet__feeParamsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getPlatformFeeWallet(): Address {
    return this.value0;
  }

  getSubscriberToPlatformFeePercentage(): BigInt {
    return this.value1;
  }

  getManagerToPlatformFeePercentage(): BigInt {
    return this.value2;
  }

  getSubscriberToManagerFeePercentage(): BigInt {
    return this.value3;
  }
}

export class BarrenWuffet extends ethereum.SmartContract {
  static bind(address: Address): BarrenWuffet {
    return new BarrenWuffet("BarrenWuffet", address);
  }

  actionWhitelistHash(): Bytes {
    let result = super.call(
      "actionWhitelistHash",
      "actionWhitelistHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_actionWhitelistHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "actionWhitelistHash",
      "actionWhitelistHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  botFrontend(): Address {
    let result = super.call("botFrontend", "botFrontend():(address)", []);

    return result[0].toAddress();
  }

  try_botFrontend(): ethereum.CallResult<Address> {
    let result = super.tryCall("botFrontend", "botFrontend():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createFund(
    name: string,
    constraints: BarrenWuffet__createFundInputConstraintsStruct,
    subscriberToManagerFeePercentage: BigInt,
    declaredTokens: Array<Address>
  ): Address {
    let result = super.call(
      "createFund",
      "createFund(string,(uint256,uint256,uint256,uint256,uint256,uint256,(uint8,address,uint256),bool),uint256,address[]):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromTuple(constraints),
        ethereum.Value.fromUnsignedBigInt(subscriberToManagerFeePercentage),
        ethereum.Value.fromAddressArray(declaredTokens)
      ]
    );

    return result[0].toAddress();
  }

  try_createFund(
    name: string,
    constraints: BarrenWuffet__createFundInputConstraintsStruct,
    subscriberToManagerFeePercentage: BigInt,
    declaredTokens: Array<Address>
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createFund",
      "createFund(string,(uint256,uint256,uint256,uint256,uint256,uint256,(uint8,address,uint256),bool),uint256,address[]):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromTuple(constraints),
        ethereum.Value.fromUnsignedBigInt(subscriberToManagerFeePercentage),
        ethereum.Value.fromAddressArray(declaredTokens)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeParams(): BarrenWuffet__feeParamsResult {
    let result = super.call(
      "feeParams",
      "feeParams():(address,uint256,uint256,uint256)",
      []
    );

    return new BarrenWuffet__feeParamsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_feeParams(): ethereum.CallResult<BarrenWuffet__feeParamsResult> {
    let result = super.tryCall(
      "feeParams",
      "feeParams():(address,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BarrenWuffet__feeParamsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  fundBeaconAddr(): Address {
    let result = super.call("fundBeaconAddr", "fundBeaconAddr():(address)", []);

    return result[0].toAddress();
  }

  try_fundBeaconAddr(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fundBeaconAddr",
      "fundBeaconAddr():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  roboCopBeaconAddr(): Address {
    let result = super.call(
      "roboCopBeaconAddr",
      "roboCopBeaconAddr():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_roboCopBeaconAddr(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "roboCopBeaconAddr",
      "roboCopBeaconAddr():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  triggerWhitelistHash(): Bytes {
    let result = super.call(
      "triggerWhitelistHash",
      "triggerWhitelistHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_triggerWhitelistHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "triggerWhitelistHash",
      "triggerWhitelistHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  wlServiceAddr(): Address {
    let result = super.call("wlServiceAddr", "wlServiceAddr():(address)", []);

    return result[0].toAddress();
  }

  try_wlServiceAddr(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wlServiceAddr",
      "wlServiceAddr():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _feeParams(): ConstructorCall_feeParamsStruct {
    return changetype<ConstructorCall_feeParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _triggerWhitelistHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _actionWhitelistHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _wlServiceAddr(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _roboCopBeaconAddr(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _fundBeaconAddr(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _botFrontendAddr(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_feeParamsStruct extends ethereum.Tuple {
  get platformFeeWallet(): Address {
    return this[0].toAddress();
  }

  get subscriberToPlatformFeePercentage(): BigInt {
    return this[1].toBigInt();
  }

  get managerToPlatformFeePercentage(): BigInt {
    return this[2].toBigInt();
  }

  get subscriberToManagerFeePercentage(): BigInt {
    return this[3].toBigInt();
  }
}

export class CreateFundCall extends ethereum.Call {
  get inputs(): CreateFundCall__Inputs {
    return new CreateFundCall__Inputs(this);
  }

  get outputs(): CreateFundCall__Outputs {
    return new CreateFundCall__Outputs(this);
  }
}

export class CreateFundCall__Inputs {
  _call: CreateFundCall;

  constructor(call: CreateFundCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get constraints(): CreateFundCallConstraintsStruct {
    return changetype<CreateFundCallConstraintsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get subscriberToManagerFeePercentage(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get declaredTokens(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }
}

export class CreateFundCall__Outputs {
  _call: CreateFundCall;

  constructor(call: CreateFundCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateFundCallConstraintsStruct extends ethereum.Tuple {
  get minCollateralPerSub(): BigInt {
    return this[0].toBigInt();
  }

  get maxCollateralPerSub(): BigInt {
    return this[1].toBigInt();
  }

  get minCollateralTotal(): BigInt {
    return this[2].toBigInt();
  }

  get maxCollateralTotal(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }

  get lockin(): BigInt {
    return this[5].toBigInt();
  }

  get allowedDepositToken(): CreateFundCallConstraintsAllowedDepositTokenStruct {
    return changetype<CreateFundCallConstraintsAllowedDepositTokenStruct>(
      this[6].toTuple()
    );
  }

  get onlyWhitelistedInvestors(): boolean {
    return this[7].toBoolean();
  }
}

export class CreateFundCallConstraintsAllowedDepositTokenStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetActionWhitelistHashCall extends ethereum.Call {
  get inputs(): SetActionWhitelistHashCall__Inputs {
    return new SetActionWhitelistHashCall__Inputs(this);
  }

  get outputs(): SetActionWhitelistHashCall__Outputs {
    return new SetActionWhitelistHashCall__Outputs(this);
  }
}

export class SetActionWhitelistHashCall__Inputs {
  _call: SetActionWhitelistHashCall;

  constructor(call: SetActionWhitelistHashCall) {
    this._call = call;
  }

  get _actionWhitelistHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetActionWhitelistHashCall__Outputs {
  _call: SetActionWhitelistHashCall;

  constructor(call: SetActionWhitelistHashCall) {
    this._call = call;
  }
}

export class SetManagerMetadataCall extends ethereum.Call {
  get inputs(): SetManagerMetadataCall__Inputs {
    return new SetManagerMetadataCall__Inputs(this);
  }

  get outputs(): SetManagerMetadataCall__Outputs {
    return new SetManagerMetadataCall__Outputs(this);
  }
}

export class SetManagerMetadataCall__Inputs {
  _call: SetManagerMetadataCall;

  constructor(call: SetManagerMetadataCall) {
    this._call = call;
  }

  get socialHandle(): string {
    return this._call.inputValues[0].value.toString();
  }

  get chatroomInvite(): string {
    return this._call.inputValues[1].value.toString();
  }

  get customLink(): string {
    return this._call.inputValues[2].value.toString();
  }

  get aboutText(): string {
    return this._call.inputValues[3].value.toString();
  }

  get strategyText(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class SetManagerMetadataCall__Outputs {
  _call: SetManagerMetadataCall;

  constructor(call: SetManagerMetadataCall) {
    this._call = call;
  }
}

export class SetSubscriptionFeeParamsCall extends ethereum.Call {
  get inputs(): SetSubscriptionFeeParamsCall__Inputs {
    return new SetSubscriptionFeeParamsCall__Inputs(this);
  }

  get outputs(): SetSubscriptionFeeParamsCall__Outputs {
    return new SetSubscriptionFeeParamsCall__Outputs(this);
  }
}

export class SetSubscriptionFeeParamsCall__Inputs {
  _call: SetSubscriptionFeeParamsCall;

  constructor(call: SetSubscriptionFeeParamsCall) {
    this._call = call;
  }

  get _feeParams(): SetSubscriptionFeeParamsCall_feeParamsStruct {
    return changetype<SetSubscriptionFeeParamsCall_feeParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetSubscriptionFeeParamsCall__Outputs {
  _call: SetSubscriptionFeeParamsCall;

  constructor(call: SetSubscriptionFeeParamsCall) {
    this._call = call;
  }
}

export class SetSubscriptionFeeParamsCall_feeParamsStruct extends ethereum.Tuple {
  get platformFeeWallet(): Address {
    return this[0].toAddress();
  }

  get subscriberToPlatformFeePercentage(): BigInt {
    return this[1].toBigInt();
  }

  get managerToPlatformFeePercentage(): BigInt {
    return this[2].toBigInt();
  }

  get subscriberToManagerFeePercentage(): BigInt {
    return this[3].toBigInt();
  }
}

export class SetTriggerWhitelistHashCall extends ethereum.Call {
  get inputs(): SetTriggerWhitelistHashCall__Inputs {
    return new SetTriggerWhitelistHashCall__Inputs(this);
  }

  get outputs(): SetTriggerWhitelistHashCall__Outputs {
    return new SetTriggerWhitelistHashCall__Outputs(this);
  }
}

export class SetTriggerWhitelistHashCall__Inputs {
  _call: SetTriggerWhitelistHashCall;

  constructor(call: SetTriggerWhitelistHashCall) {
    this._call = call;
  }

  get _triggerWhitelistHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetTriggerWhitelistHashCall__Outputs {
  _call: SetTriggerWhitelistHashCall;

  constructor(call: SetTriggerWhitelistHashCall) {
    this._call = call;
  }
}

export class SetWhitelistServiceAddressCall extends ethereum.Call {
  get inputs(): SetWhitelistServiceAddressCall__Inputs {
    return new SetWhitelistServiceAddressCall__Inputs(this);
  }

  get outputs(): SetWhitelistServiceAddressCall__Outputs {
    return new SetWhitelistServiceAddressCall__Outputs(this);
  }
}

export class SetWhitelistServiceAddressCall__Inputs {
  _call: SetWhitelistServiceAddressCall;

  constructor(call: SetWhitelistServiceAddressCall) {
    this._call = call;
  }

  get _wlServiceAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWhitelistServiceAddressCall__Outputs {
  _call: SetWhitelistServiceAddressCall;

  constructor(call: SetWhitelistServiceAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
