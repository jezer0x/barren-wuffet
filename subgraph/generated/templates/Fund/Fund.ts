// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Closed extends ethereum.Event {
  get params(): Closed__Params {
    return new Closed__Params(this);
  }
}

export class Closed__Params {
  _event: Closed;

  constructor(event: Closed) {
    this._event = event;
  }

  get fundAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get subscriber(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get balance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get subscriber(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get balance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Fund__createRuleInputTriggersStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get triggerType(): i32 {
    return this[1].toI32();
  }

  get createTimeParams(): Bytes {
    return this[2].toBytes();
  }
}

export class Fund__createRuleInputActionsStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<Fund__createRuleInputActionsInputTokensStruct> {
    return this[2].toTupleArray<
      Fund__createRuleInputActionsInputTokensStruct
    >();
  }

  get outputTokens(): Array<Fund__createRuleInputActionsOutputTokensStruct> {
    return this[3].toTupleArray<
      Fund__createRuleInputActionsOutputTokensStruct
    >();
  }
}

export class Fund__createRuleInputActionsInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class Fund__createRuleInputActionsOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class Fund__getInputTokensResultValue0Struct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class Fund__getOutputTokensResultValue0Struct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class Fund__subStuffResultConstraintsStruct extends ethereum.Tuple {
  get minCollateralPerSub(): BigInt {
    return this[0].toBigInt();
  }

  get maxCollateralPerSub(): BigInt {
    return this[1].toBigInt();
  }

  get minCollateralTotal(): BigInt {
    return this[2].toBigInt();
  }

  get maxCollateralTotal(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }

  get lockin(): BigInt {
    return this[5].toBigInt();
  }

  get allowedDepositToken(): Fund__subStuffResultConstraintsAllowedDepositTokenStruct {
    return changetype<Fund__subStuffResultConstraintsAllowedDepositTokenStruct>(
      this[6].toTuple()
    );
  }

  get onlyWhitelistedInvestors(): boolean {
    return this[7].toBoolean();
  }
}

export class Fund__subStuffResultConstraintsAllowedDepositTokenStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class Fund__subStuffResult {
  value0: Fund__subStuffResultConstraintsStruct;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: Address;

  constructor(
    value0: Fund__subStuffResultConstraintsStruct,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }

  getConstraints(): Fund__subStuffResultConstraintsStruct {
    return this.value0;
  }

  getTotalCollateral(): BigInt {
    return this.value1;
  }

  getSubscriberToManagerFeePercentage(): BigInt {
    return this.value2;
  }

  getSubscriberToPlatformFeePercentage(): BigInt {
    return this.value3;
  }

  getPlatformFeeWallet(): Address {
    return this.value4;
  }
}

export class Fund__withdrawResultTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class Fund__withdrawResult {
  value0: Array<Fund__withdrawResultTokensStruct>;
  value1: Array<BigInt>;

  constructor(
    value0: Array<Fund__withdrawResultTokensStruct>,
    value1: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getTokens(): Array<Fund__withdrawResultTokensStruct> {
    return this.value0;
  }

  getBalances(): Array<BigInt> {
    return this.value1;
  }
}

export class Fund__withdrawManagementFeeResultValue0Struct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class Fund__withdrawManagementFeeResult {
  value0: Array<Fund__withdrawManagementFeeResultValue0Struct>;
  value1: Array<BigInt>;

  constructor(
    value0: Array<Fund__withdrawManagementFeeResultValue0Struct>,
    value1: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getValue0(): Array<Fund__withdrawManagementFeeResultValue0Struct> {
    return this.value0;
  }

  getValue1(): Array<BigInt> {
    return this.value1;
  }
}

export class Fund extends ethereum.SmartContract {
  static bind(address: Address): Fund {
    return new Fund("Fund", address);
  }

  createRule(
    triggers: Array<Fund__createRuleInputTriggersStruct>,
    actions: Array<Fund__createRuleInputActionsStruct>
  ): Bytes {
    let result = super.call(
      "createRule",
      "createRule((address,uint8,bytes)[],(address,bytes,(uint8,address,uint256)[],(uint8,address,uint256)[])[]):(bytes32)",
      [
        ethereum.Value.fromTupleArray(triggers),
        ethereum.Value.fromTupleArray(actions)
      ]
    );

    return result[0].toBytes();
  }

  try_createRule(
    triggers: Array<Fund__createRuleInputTriggersStruct>,
    actions: Array<Fund__createRuleInputActionsStruct>
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createRule",
      "createRule((address,uint8,bytes)[],(address,bytes,(uint8,address,uint256)[],(uint8,address,uint256)[])[]):(bytes32)",
      [
        ethereum.Value.fromTupleArray(triggers),
        ethereum.Value.fromTupleArray(actions)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  degenMode(): boolean {
    let result = super.call("degenMode", "degenMode():(bool)", []);

    return result[0].toBoolean();
  }

  try_degenMode(): ethereum.CallResult<boolean> {
    let result = super.tryCall("degenMode", "degenMode():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getInputTokens(): Array<Fund__getInputTokensResultValue0Struct> {
    let result = super.call(
      "getInputTokens",
      "getInputTokens():((uint8,address,uint256)[])",
      []
    );

    return result[0].toTupleArray<Fund__getInputTokensResultValue0Struct>();
  }

  try_getInputTokens(): ethereum.CallResult<
    Array<Fund__getInputTokensResultValue0Struct>
  > {
    let result = super.tryCall(
      "getInputTokens",
      "getInputTokens():((uint8,address,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Fund__getInputTokensResultValue0Struct>()
    );
  }

  getOutputTokens(): Array<Fund__getOutputTokensResultValue0Struct> {
    let result = super.call(
      "getOutputTokens",
      "getOutputTokens():((uint8,address,uint256)[])",
      []
    );

    return result[0].toTupleArray<Fund__getOutputTokensResultValue0Struct>();
  }

  try_getOutputTokens(): ethereum.CallResult<
    Array<Fund__getOutputTokensResultValue0Struct>
  > {
    let result = super.tryCall(
      "getOutputTokens",
      "getOutputTokens():((uint8,address,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Fund__getOutputTokensResultValue0Struct>()
    );
  }

  getStatus(): i32 {
    let result = super.call("getStatus", "getStatus():(uint8)", []);

    return result[0].toI32();
  }

  try_getStatus(): ethereum.CallResult<i32> {
    let result = super.tryCall("getStatus", "getStatus():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  roboCop(): Address {
    let result = super.call("roboCop", "roboCop():(address)", []);

    return result[0].toAddress();
  }

  try_roboCop(): ethereum.CallResult<Address> {
    let result = super.tryCall("roboCop", "roboCop():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  subStuff(): Fund__subStuffResult {
    let result = super.call(
      "subStuff",
      "subStuff():((uint256,uint256,uint256,uint256,uint256,uint256,(uint8,address,uint256),bool),uint256,uint256,uint256,address)",
      []
    );

    return changetype<Fund__subStuffResult>(
      new Fund__subStuffResult(
        changetype<Fund__subStuffResultConstraintsStruct>(result[0].toTuple()),
        result[1].toBigInt(),
        result[2].toBigInt(),
        result[3].toBigInt(),
        result[4].toAddress()
      )
    );
  }

  try_subStuff(): ethereum.CallResult<Fund__subStuffResult> {
    let result = super.tryCall(
      "subStuff",
      "subStuff():((uint256,uint256,uint256,uint256,uint256,uint256,(uint8,address,uint256),bool),uint256,uint256,uint256,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Fund__subStuffResult>(
        new Fund__subStuffResult(
          changetype<Fund__subStuffResultConstraintsStruct>(value[0].toTuple()),
          value[1].toBigInt(),
          value[2].toBigInt(),
          value[3].toBigInt(),
          value[4].toAddress()
        )
      )
    );
  }

  withdraw(): Fund__withdrawResult {
    let result = super.call(
      "withdraw",
      "withdraw():((uint8,address,uint256)[],uint256[])",
      []
    );

    return new Fund__withdrawResult(
      result[0].toTupleArray<Fund__withdrawResultTokensStruct>(),
      result[1].toBigIntArray()
    );
  }

  try_withdraw(): ethereum.CallResult<Fund__withdrawResult> {
    let result = super.tryCall(
      "withdraw",
      "withdraw():((uint8,address,uint256)[],uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fund__withdrawResult(
        value[0].toTupleArray<Fund__withdrawResultTokensStruct>(),
        value[1].toBigIntArray()
      )
    );
  }

  withdrawManagementFee(): Fund__withdrawManagementFeeResult {
    let result = super.call(
      "withdrawManagementFee",
      "withdrawManagementFee():((uint8,address,uint256)[],uint256[])",
      []
    );

    return new Fund__withdrawManagementFeeResult(
      result[0].toTupleArray<Fund__withdrawManagementFeeResultValue0Struct>(),
      result[1].toBigIntArray()
    );
  }

  try_withdrawManagementFee(): ethereum.CallResult<
    Fund__withdrawManagementFeeResult
  > {
    let result = super.tryCall(
      "withdrawManagementFee",
      "withdrawManagementFee():((uint8,address,uint256)[],uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fund__withdrawManagementFeeResult(
        value[0].toTupleArray<Fund__withdrawManagementFeeResultValue0Struct>(),
        value[1].toBigIntArray()
      )
    );
  }

  wlService(): Address {
    let result = super.call("wlService", "wlService():(address)", []);

    return result[0].toAddress();
  }

  try_wlService(): ethereum.CallResult<Address> {
    let result = super.tryCall("wlService", "wlService():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateRuleCall extends ethereum.Call {
  get inputs(): ActivateRuleCall__Inputs {
    return new ActivateRuleCall__Inputs(this);
  }

  get outputs(): ActivateRuleCall__Outputs {
    return new ActivateRuleCall__Outputs(this);
  }
}

export class ActivateRuleCall__Inputs {
  _call: ActivateRuleCall;

  constructor(call: ActivateRuleCall) {
    this._call = call;
  }

  get ruleHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ActivateRuleCall__Outputs {
  _call: ActivateRuleCall;

  constructor(call: ActivateRuleCall) {
    this._call = call;
  }
}

export class AddInvestorToWhitelistCall extends ethereum.Call {
  get inputs(): AddInvestorToWhitelistCall__Inputs {
    return new AddInvestorToWhitelistCall__Inputs(this);
  }

  get outputs(): AddInvestorToWhitelistCall__Outputs {
    return new AddInvestorToWhitelistCall__Outputs(this);
  }
}

export class AddInvestorToWhitelistCall__Inputs {
  _call: AddInvestorToWhitelistCall;

  constructor(call: AddInvestorToWhitelistCall) {
    this._call = call;
  }

  get investors(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddInvestorToWhitelistCall__Outputs {
  _call: AddInvestorToWhitelistCall;

  constructor(call: AddInvestorToWhitelistCall) {
    this._call = call;
  }
}

export class AddRuleCollateralCall extends ethereum.Call {
  get inputs(): AddRuleCollateralCall__Inputs {
    return new AddRuleCollateralCall__Inputs(this);
  }

  get outputs(): AddRuleCollateralCall__Outputs {
    return new AddRuleCollateralCall__Outputs(this);
  }
}

export class AddRuleCollateralCall__Inputs {
  _call: AddRuleCollateralCall;

  constructor(call: AddRuleCollateralCall) {
    this._call = call;
  }

  get ruleHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get collaterals(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get fees(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class AddRuleCollateralCall__Outputs {
  _call: AddRuleCollateralCall;

  constructor(call: AddRuleCollateralCall) {
    this._call = call;
  }
}

export class CancelRuleCall extends ethereum.Call {
  get inputs(): CancelRuleCall__Inputs {
    return new CancelRuleCall__Inputs(this);
  }

  get outputs(): CancelRuleCall__Outputs {
    return new CancelRuleCall__Outputs(this);
  }
}

export class CancelRuleCall__Inputs {
  _call: CancelRuleCall;

  constructor(call: CancelRuleCall) {
    this._call = call;
  }

  get ruleHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelRuleCall__Outputs {
  _call: CancelRuleCall;

  constructor(call: CancelRuleCall) {
    this._call = call;
  }
}

export class CloseFundCall extends ethereum.Call {
  get inputs(): CloseFundCall__Inputs {
    return new CloseFundCall__Inputs(this);
  }

  get outputs(): CloseFundCall__Outputs {
    return new CloseFundCall__Outputs(this);
  }
}

export class CloseFundCall__Inputs {
  _call: CloseFundCall;

  constructor(call: CloseFundCall) {
    this._call = call;
  }
}

export class CloseFundCall__Outputs {
  _call: CloseFundCall;

  constructor(call: CloseFundCall) {
    this._call = call;
  }
}

export class CreateRuleCall extends ethereum.Call {
  get inputs(): CreateRuleCall__Inputs {
    return new CreateRuleCall__Inputs(this);
  }

  get outputs(): CreateRuleCall__Outputs {
    return new CreateRuleCall__Outputs(this);
  }
}

export class CreateRuleCall__Inputs {
  _call: CreateRuleCall;

  constructor(call: CreateRuleCall) {
    this._call = call;
  }

  get triggers(): Array<CreateRuleCallTriggersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      CreateRuleCallTriggersStruct
    >();
  }

  get actions(): Array<CreateRuleCallActionsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      CreateRuleCallActionsStruct
    >();
  }
}

export class CreateRuleCall__Outputs {
  _call: CreateRuleCall;

  constructor(call: CreateRuleCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateRuleCallTriggersStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get triggerType(): i32 {
    return this[1].toI32();
  }

  get createTimeParams(): Bytes {
    return this[2].toBytes();
  }
}

export class CreateRuleCallActionsStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<CreateRuleCallActionsInputTokensStruct> {
    return this[2].toTupleArray<CreateRuleCallActionsInputTokensStruct>();
  }

  get outputTokens(): Array<CreateRuleCallActionsOutputTokensStruct> {
    return this[3].toTupleArray<CreateRuleCallActionsOutputTokensStruct>();
  }
}

export class CreateRuleCallActionsInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class CreateRuleCallActionsOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class DeactivateRuleCall extends ethereum.Call {
  get inputs(): DeactivateRuleCall__Inputs {
    return new DeactivateRuleCall__Inputs(this);
  }

  get outputs(): DeactivateRuleCall__Outputs {
    return new DeactivateRuleCall__Outputs(this);
  }
}

export class DeactivateRuleCall__Inputs {
  _call: DeactivateRuleCall;

  constructor(call: DeactivateRuleCall) {
    this._call = call;
  }

  get ruleHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeactivateRuleCall__Outputs {
  _call: DeactivateRuleCall;

  constructor(call: DeactivateRuleCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get collateralToken(): DepositCallCollateralTokenStruct {
    return changetype<DepositCallCollateralTokenStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get amountSent(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCallCollateralTokenStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _constraints(): InitializeCall_constraintsStruct {
    return changetype<InitializeCall_constraintsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get _feeParams(): InitializeCall_feeParamsStruct {
    return changetype<InitializeCall_feeParamsStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get _wlServiceAddr(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _triggerWhitelistHash(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _actionWhitelistHash(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get roboCopBeaconAddr(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _declaredTokenAddrs(): Array<Address> {
    return this._call.inputValues[7].value.toAddressArray();
  }

  get botFrontendAddr(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall_constraintsStruct extends ethereum.Tuple {
  get minCollateralPerSub(): BigInt {
    return this[0].toBigInt();
  }

  get maxCollateralPerSub(): BigInt {
    return this[1].toBigInt();
  }

  get minCollateralTotal(): BigInt {
    return this[2].toBigInt();
  }

  get maxCollateralTotal(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }

  get lockin(): BigInt {
    return this[5].toBigInt();
  }

  get allowedDepositToken(): InitializeCall_constraintsAllowedDepositTokenStruct {
    return changetype<InitializeCall_constraintsAllowedDepositTokenStruct>(
      this[6].toTuple()
    );
  }

  get onlyWhitelistedInvestors(): boolean {
    return this[7].toBoolean();
  }
}

export class InitializeCall_constraintsAllowedDepositTokenStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class InitializeCall_feeParamsStruct extends ethereum.Tuple {
  get platformFeeWallet(): Address {
    return this[0].toAddress();
  }

  get subscriberToPlatformFeePercentage(): BigInt {
    return this[1].toBigInt();
  }

  get managerToPlatformFeePercentage(): BigInt {
    return this[2].toBigInt();
  }

  get subscriberToManagerFeePercentage(): BigInt {
    return this[3].toBigInt();
  }
}

export class RedeemRuleOutputsCall extends ethereum.Call {
  get inputs(): RedeemRuleOutputsCall__Inputs {
    return new RedeemRuleOutputsCall__Inputs(this);
  }

  get outputs(): RedeemRuleOutputsCall__Outputs {
    return new RedeemRuleOutputsCall__Outputs(this);
  }
}

export class RedeemRuleOutputsCall__Inputs {
  _call: RedeemRuleOutputsCall;

  constructor(call: RedeemRuleOutputsCall) {
    this._call = call;
  }
}

export class RedeemRuleOutputsCall__Outputs {
  _call: RedeemRuleOutputsCall;

  constructor(call: RedeemRuleOutputsCall) {
    this._call = call;
  }
}

export class ReduceRuleCollateralCall extends ethereum.Call {
  get inputs(): ReduceRuleCollateralCall__Inputs {
    return new ReduceRuleCollateralCall__Inputs(this);
  }

  get outputs(): ReduceRuleCollateralCall__Outputs {
    return new ReduceRuleCollateralCall__Outputs(this);
  }
}

export class ReduceRuleCollateralCall__Inputs {
  _call: ReduceRuleCollateralCall;

  constructor(call: ReduceRuleCollateralCall) {
    this._call = call;
  }

  get ruleHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get collaterals(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ReduceRuleCollateralCall__Outputs {
  _call: ReduceRuleCollateralCall;

  constructor(call: ReduceRuleCollateralCall) {
    this._call = call;
  }
}

export class TakeActionCall extends ethereum.Call {
  get inputs(): TakeActionCall__Inputs {
    return new TakeActionCall__Inputs(this);
  }

  get outputs(): TakeActionCall__Outputs {
    return new TakeActionCall__Outputs(this);
  }
}

export class TakeActionCall__Inputs {
  _call: TakeActionCall;

  constructor(call: TakeActionCall) {
    this._call = call;
  }

  get trigger(): TakeActionCallTriggerStruct {
    return changetype<TakeActionCallTriggerStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get action(): TakeActionCallActionStruct {
    return changetype<TakeActionCallActionStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get collaterals(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get fees(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class TakeActionCall__Outputs {
  _call: TakeActionCall;

  constructor(call: TakeActionCall) {
    this._call = call;
  }
}

export class TakeActionCallTriggerStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get triggerType(): i32 {
    return this[1].toI32();
  }

  get createTimeParams(): Bytes {
    return this[2].toBytes();
  }
}

export class TakeActionCallActionStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<TakeActionCallActionInputTokensStruct> {
    return this[2].toTupleArray<TakeActionCallActionInputTokensStruct>();
  }

  get outputTokens(): Array<TakeActionCallActionOutputTokensStruct> {
    return this[3].toTupleArray<TakeActionCallActionOutputTokensStruct>();
  }
}

export class TakeActionCallActionInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class TakeActionCallActionOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class TakeActionToClosePositionCall extends ethereum.Call {
  get inputs(): TakeActionToClosePositionCall__Inputs {
    return new TakeActionToClosePositionCall__Inputs(this);
  }

  get outputs(): TakeActionToClosePositionCall__Outputs {
    return new TakeActionToClosePositionCall__Outputs(this);
  }
}

export class TakeActionToClosePositionCall__Inputs {
  _call: TakeActionToClosePositionCall;

  constructor(call: TakeActionToClosePositionCall) {
    this._call = call;
  }

  get trigger(): TakeActionToClosePositionCallTriggerStruct {
    return changetype<TakeActionToClosePositionCallTriggerStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get action(): TakeActionToClosePositionCallActionStruct {
    return changetype<TakeActionToClosePositionCallActionStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get collaterals(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get fees(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class TakeActionToClosePositionCall__Outputs {
  _call: TakeActionToClosePositionCall;

  constructor(call: TakeActionToClosePositionCall) {
    this._call = call;
  }
}

export class TakeActionToClosePositionCallTriggerStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get triggerType(): i32 {
    return this[1].toI32();
  }

  get createTimeParams(): Bytes {
    return this[2].toBytes();
  }
}

export class TakeActionToClosePositionCallActionStruct extends ethereum.Tuple {
  get callee(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get inputTokens(): Array<
    TakeActionToClosePositionCallActionInputTokensStruct
  > {
    return this[2].toTupleArray<
      TakeActionToClosePositionCallActionInputTokensStruct
    >();
  }

  get outputTokens(): Array<
    TakeActionToClosePositionCallActionOutputTokensStruct
  > {
    return this[3].toTupleArray<
      TakeActionToClosePositionCallActionOutputTokensStruct
    >();
  }
}

export class TakeActionToClosePositionCallActionInputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class TakeActionToClosePositionCallActionOutputTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get tokens(): Array<WithdrawCallTokensStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      WithdrawCallTokensStruct
    >();
  }

  get balances(): Array<BigInt> {
    return this._call.outputValues[1].value.toBigIntArray();
  }
}

export class WithdrawCallTokensStruct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}

export class WithdrawManagementFeeCall extends ethereum.Call {
  get inputs(): WithdrawManagementFeeCall__Inputs {
    return new WithdrawManagementFeeCall__Inputs(this);
  }

  get outputs(): WithdrawManagementFeeCall__Outputs {
    return new WithdrawManagementFeeCall__Outputs(this);
  }
}

export class WithdrawManagementFeeCall__Inputs {
  _call: WithdrawManagementFeeCall;

  constructor(call: WithdrawManagementFeeCall) {
    this._call = call;
  }
}

export class WithdrawManagementFeeCall__Outputs {
  _call: WithdrawManagementFeeCall;

  constructor(call: WithdrawManagementFeeCall) {
    this._call = call;
  }

  get value0(): Array<WithdrawManagementFeeCallValue0Struct> {
    return this._call.outputValues[0].value.toTupleArray<
      WithdrawManagementFeeCallValue0Struct
    >();
  }

  get value1(): Array<BigInt> {
    return this._call.outputValues[1].value.toBigIntArray();
  }
}

export class WithdrawManagementFeeCallValue0Struct extends ethereum.Tuple {
  get t(): i32 {
    return this[0].toI32();
  }

  get addr(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }
}
